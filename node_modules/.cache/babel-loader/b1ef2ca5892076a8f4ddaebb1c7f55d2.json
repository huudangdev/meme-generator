{"ast":null,"code":"var _jsxFileName = \"/home/huudang/80-20/react-meme-generator-ts/src/components/form.tsx\";\n// Import React\nimport * as React from 'react'; // Interface for Form Component\n\n// Form component\nvar Form = function Form(props) {\n  return React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form__inputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"text-top\",\n    placeholder: \"Text top\",\n    type: \"text\",\n    value: props.textTop,\n    onChange: props.handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"text-bottom\",\n    placeholder: \"Text bottom\",\n    type: \"text\",\n    value: props.textBottom,\n    onChange: props.handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form__btns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"button\",\n    onClick: props.handleImageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Change image\"), React.createElement(\"label\", {\n    className: \"btn btn-primary\",\n    htmlFor: \"fileInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Load image\", React.createElement(\"input\", {\n    id: \"fileInput\",\n    name: \"fileInput\",\n    type: \"file\",\n    accept: \".jpg, .jpeg, .png\",\n    onChange: props.handleImageInputChange,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"button\",\n    onClick: props.handleMemeGeneration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Generate meme\"), props.isMemeGenerated && React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    type: \"button\",\n    onClick: props.handleMemeReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Reset\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/huudang/80-20/react-meme-generator-ts/src/components/form.tsx"],"names":["React","Form","props","textTop","handleInputChange","textBottom","handleImageChange","handleImageInputChange","handleMemeGeneration","isMemeGenerated","handleMemeReset"],"mappings":";AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CAEA;;AAYA;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAA0B;AACrC,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEA,KAAK,CAACC,OAJf;AAKE,IAAA,QAAQ,EAAED,KAAK,CAACE,iBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,WAAW,EAAC,aAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEF,KAAK,CAACG,UAJf;AAKE,IAAA,QAAQ,EAAEH,KAAK,CAACE,iBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,EAqBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACI,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAWE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,OAAO,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKE;AAAO,IAAA,EAAE,EAAC,WAAV;AAAsB,IAAA,IAAI,EAAC,WAA3B;AAAuC,IAAA,IAAI,EAAC,MAA5C;AAAmD,IAAA,MAAM,EAAC,mBAA1D;AAA8E,IAAA,QAAQ,EAAEJ,KAAK,CAACK,sBAA9F;AAAsH,IAAA,MAAM,MAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAXF,EAoBE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAEL,KAAK,CAACM,oBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBApBF,EA6BGN,KAAK,CAACO,eAAN,IAAyB;AACxB,IAAA,SAAS,EAAC,gBADc;AAExB,IAAA,IAAI,EAAC,QAFmB;AAGxB,IAAA,OAAO,EAAEP,KAAK,CAACQ,eAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA7B5B,CArBF,CADF;AA6DD,CA9DD;;AAgEA,eAAeT,IAAf","sourcesContent":["// Import React\nimport * as React from 'react'\n\n// Interface for Form Component\ninterface FormInterface {\n  isMemeGenerated: boolean;\n  textBottom: string;\n  textTop: string;\n  handleImageChange: () => void;\n  handleImageInputChange: (event: React.ChangeEvent) => void;\n  handleInputChange: (event: React.ChangeEvent) => void;\n  handleMemeGeneration: () => void;\n  handleMemeReset: () => void;\n}\n\n// Form component\nconst Form = (props: FormInterface) => {\n  return (\n    <div className=\"form\">\n      <div className=\"form__inputs\">\n        {/* Input for the text at the top */}\n        <input\n          name=\"text-top\"\n          placeholder=\"Text top\"\n          type=\"text\"\n          value={props.textTop}\n          onChange={props.handleInputChange}\n        />\n\n        {/* Input for the text at the bottom */}\n        <input\n          name=\"text-bottom\"\n          placeholder=\"Text bottom\"\n          type=\"text\"\n          value={props.textBottom}\n          onChange={props.handleInputChange}\n        />\n      </div>\n\n      <div className=\"form__btns\">\n        {/* Button to load random image from api.imgflip.com */}\n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          onClick={props.handleImageChange}\n        >\n          Change image\n        </button>\n\n        {/* 'Button' to load image from disk */}\n        <label\n          className=\"btn btn-primary\"\n          htmlFor=\"fileInput\"\n        >\n          Load image\n          <input id=\"fileInput\" name=\"fileInput\" type=\"file\" accept=\".jpg, .jpeg, .png\" onChange={props.handleImageInputChange} hidden />\n        </label>\n\n        {/* Button to generate png image of the meme */}\n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          onClick={props.handleMemeGeneration}\n        >\n          Generate meme\n        </button>\n\n        {/* Button to remove the meme image from the DOM */}\n        {props.isMemeGenerated && <button\n          className=\"btn btn-danger\"\n          type=\"button\"\n          onClick={props.handleMemeReset}\n        >\n          Reset\n        </button>}\n      </div>\n    </div>\n  )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}